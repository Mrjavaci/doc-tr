<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 7006df7c1fbc64457ac4011ae33309c3f3e5b202 Maintainer: nilgun Status: ready -->
<sect1 xml:id="install.unix.lighttpd-14" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Unix sistemlerde Lighttpd 1.4</title>

 <para>
  Bu bölüm PHP'nin Unix sistemlerde Lighttpd 1.4 ile kurulumu hakkında
  bilgiler ve ipuçları içerir.
 </para>

 <para>
  Lütfen devam etmeden önce <link xlink:href="&url.lighttpd.doc;">Lighttpd
  redmine</link> sitesini ziyaret edip Lighttpd'nin doğru düzgün nasıl
  kurulacağını öğreniniz.
 </para>

 <para>
  PHP ve Lighttpd'ye bağlanmak için tercih edilen SAPI FastCGI'dir. FastCGI,
  php-cgi'yi otosihirli bir şekilde etkin kılar.
 </para>

 <sect2 xml:id="install.unix.lighttpd-14.lighttpd-spawn">
  <title>Lighttpd'ye PHP süreçlerini çatallattırmak</title>

  <para>
   Lighttpd'nin PHP'ye bağlanmasını ve fastcgi süreçlerini çatallamasını
   sağlamak üzere yapılandırmak için <filename>lighttpd.conf</filename>
   dosyasını düzenlemeniz gerekir. FastCGI süreçlerine yerel sistemden
   bağlanmak için soketler tercih edilir.
  </para>

  <example>
   <title>- lighttpd.conf'tan bir bölüm</title>
   <screen>
<![CDATA[
server.modules += ( "mod_fastcgi" )

fastcgi.server = ( ".php" =>
  ((
    "socket" => "/tmp/php.socket",
    "bin-path" => "/usr/local/bin/php-cgi",
    "bin-environment" => (
      "PHP_FCGI_CHILDREN" => "16",
      "PHP_FCGI_MAX_REQUESTS" => "10000"
    ),
    "min-procs" => 1,
    "max-procs" => 1,
    "idle-timeout" => 20
  ))
)
]]>

   </screen>
  </example>

  <para>
   <filename>bin-path</filename> yönergesi lighttpd'nin fastcgi süreçlerini
   dinamik olarak çatallamasına izin verir. PHP kendi çocuklarını
   <envar>PHP_FCGI_CHILDREN</envar> ortam değişkenine göre çatallayacaktır.
   Çatallanan sürecin ortamını <literal>bin-environment</literal> yönergesi
   tanımlar. PHP, <envar>PHP_FCGI_MAX_REQUESTS</envar> değerinin aşılmasına
   sebep olan çocuk süreci öldürür. PHP'de <literal>min-procs</literal> ve
   <literal>max-procs</literal> yönergelerinden genel olarak kaçınılması
   gerekir. PHP kendi çocuklarını yönetir ve makine kodu önbelleklerini APC
   gibi çocukları arasında paylaştırır. <literal>min-procs</literal>
   yönergesine <literal>1</literal>'den büyük bir değer atanmışsa PHP
   yanıtçılarının sayısı <envar>PHP_FCGI_CHILDREN</envar> değerinin katları
   olacaktır (<literal>2 min-procs * 16 çocuk eşittir 32 yanıtçı</literal>).
  </para>
 </sect2>

 <sect2 xml:id="install.unix.lighttpd-14.spawn-fcgi">
  <title>Spawn-fcgi ile çatallama</title>

  <para>
   Lighttpd, FastCGI süreçlerinin çatallanmasını kolaylaştırmak için
   <code>spawn-fcgi</code> adında bir uygulamayla gelir.
  </para>
 </sect2>

 <sect2 xml:id="install.unix.lighttpd-14.spawn-php">
  <title>php-cgi'nin çatallanması</title>

  <para>
   Süreçleri <code>spawn-fcgi</code> kullanmaksızın çatallamak mümkünse de,
   biraz ağır kaldırma çalışmak gerekir. Gelen istekleri karşılamak için
   PHP'nin kaç çocuk çatallayacağı <envar>PHP_FCGI_CHILDREN</envar> ortam
   değişkeni ile belirlenir. PHP'nin her çocuğunun kaç isteklik yaşayacağını
   ise <envar>PHP_FCGI_MAX_REQUESTS</envar> belirler. Aşağıda, PHP
   yanıtçılarının çatallanmasına yardımcı olan basit bir <code>bash</code>
   betiği verilmiştir.
  </para>

  <example>
   <title>- FastCGI Yanıtçılarının Çatallanması</title>
   <screen>
<![CDATA[
#!/bin/sh

# php-cgi çalıştırılabilirinin yeri
PHP=/usr/local/bin/php-cgi

# PID dosyasının yeri
PHP_PID=/tmp/php.pid

# Dinlenecek adres
#FCGI_BIND_ADDRESS=10.0.1.1:10000
# Dinlenecek soket
FCGI_BIND_ADDRESS=/tmp/php.sock

PHP_FCGI_CHILDREN=16
PHP_FCGI_MAX_REQUESTS=10000

env -i PHP_FCGI_CHILDREN=$PHP_FCGI_CHILDREN \
       PHP_FCGI_MAX_REQUESTS=$PHP_FCGI_MAX_REQUESTS \
       $PHP -b $FCGI_BIND_ADDRESS &

echo $! > "$PHP_PID"

]]>
   </screen>
  </example>
 </sect2>

 <sect2 xml:id="install.unix.lighttpd-14.remote-fcgi">
  <title>Uzak FCGI (nesnel) örneklerine bağlanmak</title>

  <para>
   Uygulamaları dengelemek için FastCGI örnekleri çok sayıda uzak makineye
   çatallanabilir.
  </para>

  <example>
   <title>- Uzak FCGI örneklerine bağlanmak</title>
   <screen>
<![CDATA[
fastcgi.server = ( ".php" =>
   (( "host" => "10.0.0.2", "port" => 1030 ),
    ( "host" => "10.0.0.3", "port" => 1030 ))
)
]]>
   </screen>
  </example>
 </sect2>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
