<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 8e732e84a1425cf0ab3a5b0da8fe113c7a6da85e Maintainer: nilgun Status: ready -->
<sect1 xml:id="install.windows.recommended" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Windows sistemlerinde Önerilen Yapılandırma</title>
 <sect2>
  <title>OpCache</title>
  <para>
   OpCache'i etkinleştirmeniz önemle tavsiye edilir. Bu eklenti, Windows
   için PHP'ye dahildir. PHP betiklerini derler, en iyilendirir ve sayfa her
   yüklendiğinde yeniden derlenmemeleri için onları bellekte önbelleğe alır.
  </para>
  <para>
   &php.ini; dosyasında şunu yapın:
   <example>
    <title>Önerilen OpCache Yapılandırması</title>
    <screen>
<![CDATA[
opcache.enable=On
opcache.enable_cli=On
]]>
    </screen>
   </example>
   Ve http sunucusunu yeniden başlatın. Daha fazla bilgi için bkz:
   <link linkend="opcache.configuration">OpCache Yapılandırması</link>
  </para>
 </sect2>
 <sect2>
  <title>WinCache</title>
  <simpara>
   Özellikle paylaşılan bir web barındırma ortamında IIS kullanılıyorsa
   veya ağ bağlantılı dosya depolama (NAS) kullanılıyorsa, WinCache
   kullanılması önerilir. WinCache, PHP 8.0.0'dan itibaren artık
   desteklenmemektedir.
  </simpara>
  <simpara>
   Tüm PHP Uygulamaları, WinCache dosya önbelleği özelliğinden otomatik
   olarak yararlanır. Dosya sistemi işlemleri bellekte önbelleğe alınır.
  </simpara>
  <simpara>
   WinCache ayrıca kullanıcı nesnelerini bellekte önbelleğe alabilir ve
   bunları <varname>php.exe</varname> veya <varname>php-cgi.exe</varname>
   süreçleri arasında paylaşabilir (nesneleri istekler arasında paylaşır).
  </simpara>
  <simpara>
   Birçok büyük http uygulamasının, WinCache kullanıcı nesnesi önbelleğini
   kullanmak için bir eklenti, uzantı veya yapılandırma seçeneği vardır.
  </simpara>
  <simpara>
   Yüksek başarıma ihtiyacınız varsa uygulamalarınızda nesne önbelleğini
   kullanmalısınız.
  </simpara>
  <simpara>
   PHP eklentilerini dizininize bir WinCache DLL (veya tgz) indirmek için
   (php.ini'nizdeki extensions_dir) bkz:
   <link xlink:href="http://pecl.php.net/package/WinCache">http://pecl.php.net/package/WinCache</link>
  </simpara>
  <para>
   &php.ini; dosyasında şunu yapın:
   <example>
    <title>Önerilen WinCache Yapılandırması</title>
    <screen>
<![CDATA[
extension=php_wincache.dll
wincache.fcenabled=1
wincache.ocenabled=1 ; removed as of wincache 2.0.0.0
]]>
    </screen>
   </example>
    Daha fazla bilgi için bkz:
   <link linkend="wincache.configuration">WinCache Yapılandırması</link>
  </para>
 </sect2>

 <sect2>
  <title>IIS Yapılandırması</title>

  <para>
   IIS Yöneticisinde, FastCGI modülünü kurun ve <varname>PHP-CGI.exe</varname>
   (<varname>PHP.exe</varname> değil) yoluna <varname>`.php`</varname> için
   bir işleyici eşlemi ekleyin.
  </para>

  <para>
   IIS yapılandırmasını betik olarak oluşturmak için APPCMD komut satırı
   aracını kullanabilirsiniz.
  </para>
 </sect2>

 <sect2>
  <title>Veritabanı</title>
  <para>
   Muhtemelen bir Veritabanı Sunucusuna ihtiyacınız olacaktır.
   Çoğu veritabanının PHP eklentisi vardır. Siteniz çok fazla trafik
   almıyorsa, veritabanı sunucunuzu http sunucunuzla aynı sunucuda
   çalıştırabilirsiniz. Birçok veritabanı sunucusu Windows üzerinde çalışır.
  </para>

  <para>PHP, mysqli ve pdo_mysql eklentilerini içerir.</para>
  <para>
   Bkz: <link xlink:href="https://dev.mysql.com/downloads/windows/">https://dev.mysql.com/downloads/windows/</link>
  </para>
 </sect2>
</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
