<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 54b06426830ad1c96a042a848f40916b42f30d48 Maintainer: nilgun Status: ready -->
<refentry xml:id="function.stream-bucket-prepend" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>stream_bucket_prepend</refname>
  <refpurpose>Zincirin başına bir bakla ekler</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>void</type><methodname>stream_bucket_prepend</methodname>
   <methodparam><type>resource</type><parameter>zincir</parameter></methodparam>
   <methodparam><type>object</type><parameter>bakla</parameter></methodparam>
  </methodsynopsis>
  <para>
    Zincirin başına bir bakla eklemek için çağrılır. Genellikle
    <methodname>php_user_filter::filter</methodname> işlevinden çağrılır.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>zincir</parameter></term>
    <listitem>
     <para>
      Bir veya daha fazla <parameter>bakla</parameter> nesnesi içeren bir
      <parameter>zincir</parameter> özkaynağı.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>bakla</parameter></term>
    <listitem>
     <para>
      Bakla nesnesi.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.void;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>- <function>stream_bucket_prepend</function> örnekleri</title>
    <programlisting role="php">
<![CDATA[
<?php

class foo extends php_user_filter {
  protected $calls = 0;
  public function filter($giriş, $çıkış, &$tüketilen, $kapanış) {
    while ($bakla = stream_bucket_make_writeable($giriş)) {
      $tüketilen += $bakla->datalen;
      if ($this->calls++ == 2) {
        // Bu bakla diğer baklanın önünde görünecek.
        stream_bucket_prepend($giriş, $bakla);
      }
    }
    return PSFS_FEED_ME;
  }
}
stream_filter_register('test', 'foo');
print  file_get_contents('php://filter/read=test/resource=foo');
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
