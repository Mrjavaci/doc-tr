<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 422bb032237525aaf50e6a43f33362a2c610a1d7 Maintainer: nilgun Status: ready -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.strcspn">
 <refnamediv>
  <refname>strcspn</refname>
  <refpurpose>Maske ile eşleşMEyen ilk parçanın uzunluğunu bulur</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>strcspn</methodname>
   <methodparam><type>string</type><parameter>dizge</parameter></methodparam>
   <methodparam><type>string</type><parameter>maske</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>başlangıç</parameter><initializer>0</initializer></methodparam>
   <methodparam choice="opt"><type class="union"><type>int</type><type>null</type></type><parameter>uzunluk</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   <parameter>dizge</parameter> dizgesinin <parameter>karakterler</parameter>
   dizgesiyle eşleşMEyen en uzun ilk parçasının uzunluğunu döndürür.
  </para>
  <para>
   <parameter>başlangıç</parameter> ve <parameter>uzunluk</parameter>
   atlanmışsa, tüm <parameter>dizge</parameter> incelenir. Belirtilmişlerse,
   etki <literal>strcspn(substr($dizge, $başlangıç, $uzunluk), $karakterler)</literal>
   çağrısıyla aynı olur (daha fazla bilgi için: <function>substr</function>).
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>dizge</parameter></term>
     <listitem>
      <para>
       Maskenin eşleşmeyeceği dizge.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>karakterler</parameter></term>
     <listitem>
      <para>
       İzin verilmeyen karakterleri içeren dizge.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>başlangıç</parameter></term>
     <listitem>
      <para>
       Eşleştirmenin başlatılacağı konum.
      </para>
      <para>
       <parameter>başlangıç</parameter> belirtilmişse ve negatif değilse,
       <function>strcspn</function> işlevi <parameter>dizge</parameter>yi
       <parameter>başlangıç</parameter>ıncı konumdan itibaren incelemeye başlar.
       örneğin, '<literal>abcdef</literal>' dizgesinde, <literal>0</literal>ıncı
       karakter '<literal>a</literal>', <literal>2</literal>inci karakter
       '<literal>c</literal>' ve böyle gider.
      </para>
      <para>
       <parameter>başlangıç</parameter> belirtilmişse ve negatif ise,
       <function>strcspn</function> işlevi <parameter>dizge</parameter>yi
       sondan <parameter>başlangıç</parameter>ıncı konumdan itibaren incelemeye başlar.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>uzunluk</parameter></term>
     <listitem>
      <para>
       Eşleşmemenin aranacağı alt dizge uzunluğu. Negatif değerler uzunluğu
       dizgenin sonundan başına doğru belirler.
      </para>
      <para>
       <parameter>uzunluk</parameter>  belirtilmişse ve negatif değilse,
       <parameter>dizge</parameter>nin başından itibaren
       <parameter>uzunluk</parameter> karakteri incelenir.
      </para>
      <para>
       <parameter>uzunluk</parameter> belirtilmişse ve negatif ise,
       <parameter>dizge</parameter> baştan itibaren,
       <parameter>dizge</parameter>nin sonundan
       <parameter>uzunluk</parameter>uncu karaktere kadar incelenir.
       </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <parameter>dizge</parameter> dizgesinin <parameter>karakterler</parameter>
   dizgesiyle eşleşMEyen en uzun ilk parçasının uzunluğunu döndürür.
  </para>
  <note>
   <para>
    <parameter>başlangıç</parameter> belirtilmişse, dönen uzunluk bu konumdan
    itibaren sayılır, <parameter>dizge</parameter>nin başından itibaren değil.
   </para>
  </note>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>8.0.0</entry>
       <entry>
        <parameter>uzunluk</parameter> artık &null; olabiliyor.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example xml:id="strcspn.example">
   <title>- <function>strcspn</function> örneği</title>
   <programlisting role="php">
<![CDATA[
<?php
$a = strcspn('abcd',  'apple');
$b = strcspn('abcd',  'banana');
$c = strcspn('hello', 'l');
$d = strcspn('hello', 'world');
$e = strcspn('abcdhelloabcd', 'abcd', -9);
$f = strcspn('abcdhelloabcd', 'abcd', -9, -5);

var_dump($a);
var_dump($b);
var_dump($c);
var_dump($d);
var_dump($e);
var_dump($f);
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
int(0)
int(0)
int(2)
int(2)
int(5)
int(4)
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &note.bin-safe;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>strspn</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
