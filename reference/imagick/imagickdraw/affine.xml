<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 668b6fc28891062b1c96202009ccb70b7147740d Maintainer: haluk Status: ready -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="imagickdraw.affine">
 <refnamediv>
  <refname>ImagickDraw::affine</refname>
  <refpurpose>Geçerli homojen koordinatlar matrisini ayarlar</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier>
   <type>bool</type><methodname>ImagickDraw::affine</methodname>
   <methodparam><type>array</type><parameter>matris</parameter></methodparam>
  </methodsynopsis>
  <para>
   Belirtilen matrise göre homojen koordinatlar matrisini ayarlar.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>matris</parameter></term>
     <listitem>
      <para>
       Bir dizi olarak homojen koordinatlar matrisi (Affine matrix).
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>

 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.void;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
    <example>
      <title>- <function>ImagickDraw::affine</function> örneği</title>
      <programlisting role="php">
      <![CDATA[
<?php
function affine($strokeColor, $fillColor, $backgroundColor) {

    $draw = new \ImagickDraw();

    $draw->setStrokeWidth(1);
    $draw->setStrokeOpacity(1);
    $draw->setStrokeColor($strokeColor);
    $draw->setFillColor($fillColor);

    $draw->setStrokeWidth(2);

    $PI = 3.141592653589794;
    $angle = 60 * $PI / 360;

    // Çizim koordinatlarını ölçekle.
    $affineScale = array("sx" => 1.75, "sy" => 1.75, "rx" => 0, "ry" => 0, "tx" => 0, "ty" => 0);

    // Çizim koordinatlarını kırp
    $affineShear = array("sx" => 1, "sy" => 1, "rx" => sin($angle), "ry" => -sin($angle), "tx" => 0, "ty" => 0);

    // Çizim koordinatlarını döndür. Kırpma koordinatları matrisi
    // yanlış ölçeklendirilmiş çizimler üretir.
    $affineRotate = array("sx" => cos($angle), "sy" => cos($angle), "rx" => sin($angle), "ry" => -sin($angle), "tx" => 0, "ty" => 0,);

    // Çizimi dönüştür
    $affineTranslate = array("sx" => 1, "sy" => 1, "rx" => 0, "ry" => 0, "tx" => 30, "ty" => 30);

    // Tanımlı homojen koordinatlar matrisi
    $affineIdentity = array("sx" => 1, "sy" => 1, "rx" => 0, "ry" => 0, "tx" => 0, "ty" => 0);

    $examples = [$affineScale, $affineShear, $affineRotate, $affineTranslate, $affineIdentity,];

    $count = 0;

    foreach ($examples as $example) {
        $draw->push();
        $draw->translate(($count % 2) * 250, intval($count / 2) * 250);
        $draw->translate(100, 100);
        $draw->affine($example);
        $draw->rectangle(-50, -50, 50, 50);
        $draw->pop();
        $count++;
    }

    // Çizim komutlarının işlenebileceği bir görüntü nesnesi oluştur
    $image = new \Imagick();
    $image->newImage(500, 750, $backgroundColor);
    $image->setImageFormat("png");

    // ImagickDraw nesnesindeki çizim komutlarını görüntüye işle
    $image->drawImage($draw);

    // Görüntüyü tarayıcıya gönder
    header("Content-Type: image/png");
    echo $image->getImageBlob();
}

?>
]]>
      </programlisting>
    </example>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
