<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 184f3f7bd45643cb80f828d0bb001991ec3a5fad Maintainer: nilgun Status: ready -->
<chapter xml:id="session.upload-progress" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Oturumu Karşıya Yükleme Süreci</title>

 <para>
  <link linkend="ini.session.upload-progress.enabled">session.upload_progress.enabled</link>
  INI seçeneği etkin ise, PHP karşıya yüklenen bağımsız dosyaların karşıya
  yükleme sürecini izleyebilecektir. Bu bilgi, yükleme isteğinin kendisi için
  yararlı bir özellik değildir, ancak bir uygulama dosya yükleme sırasında,
  durumu denetim altında tutmak için ayrı bir uç noktaya (örneğin
  <acronym>XHR</acronym> aracılığıyla) bir POST isteği gönderebilir.
 </para>
 <para>
  Karşıya yükleme süreci, bir yükleme devam ederken ve <link
  linkend="ini.session.upload-progress.name">session.upload_progress.name</link>
  INI ayarıyla aynı isme sahip bir değişken POST edilirken
  <varname>$_SESSION</varname> süper küreselinde kullanılabilir olacaktır.
  PHP bu tür POST isteklerini algıladığında, <varname>$_SESSION</varname>
  altında bir dizi oluşturur; burada anahtar, <link
  linkend="ini.session.upload-progress.prefix">session.upload_progress.prefix</link>
  ve <link
   linkend="ini.session.upload-progress.name">session.upload_progress.name</link>
  INI seçeneklerinin birleşiminden oluşur.
  Anahtar genellikle bu INI ayarlarından elde edilir. Örnek:
  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php
$key = ini_get("session.upload_progress.prefix") . $_POST[ini_get("session.upload_progress.name")];
var_dump($_SESSION[$key]);
?>
]]>
   </programlisting>
  </informalexample>
 </para>
 <para>
  <literal>$_SESSION[$key]["cancel_upload"]</literal> anahtarına &true;
  atayarak, sürmekte olan dosya yüklemesini iptal etmek de mümkündür. Aynı
  istekte birden fazla dosya yüklerken, bu yalnızca devam etmekte olan dosya
  yüklemesini ve bekleyen dosya yüklemelerini iptal eder, ancak başarıyla
  tamamlanmış yüklemeleri kaldırmaz. Bir yükleme bu şekilde iptal edildiğinde
  <varname>$_FILES</varname> dizisindeki <literal>error</literal> anahtarına
  <constant>UPLOAD_ERR_EXTENSION</constant> atanır.
 </para>
 <para>
  <link linkend="ini.session.upload-progress.freq">session.upload_progress.freq</link>
  ve <link linkend="ini.session.upload-progress.min-freq">session.upload_progress.min_freq</link>
  INI seçenekleri, karşıya yükleme süreci bilgisinin ne sıklıkta yeniden
  hesaplanması gerektiğini denetler. Bu iki ayar için uygun bir miktar dışında,
  bu özelliğin getirdiği ek bir yük neredeyse yoktur.
 </para>
 <para>
  <example>
   <title>- Örnek bilgi</title>
   <para>
    Karşıya yükleme süreci için dizi yapılandırma örneği
   </para>
   <programlisting role="html" xml:id="session.upload-progress.example-form">
<![CDATA[
<form action="upload.php" method="POST" enctype="multipart/form-data">
 <input type="hidden" name="<?php echo ini_get("session.upload_progress.name"); ?>" value="123" />
 <input type="file" name="file1" />
 <input type="file" name="file2" />
 <input type="submit" />
</form>
]]>
   </programlisting>
   <para>
    Oturumda saklanan veri şöyle görünür:
   </para>
   <programlisting role="php" xml:id="session.upload-progress.example-array">
<![CDATA[
<?php
$_SESSION["upload_progress_123"] = array(
 "start_time" => 1234567890,   // İstek zamanı
 "content_length" => 57343257, // POST içeriğinin uzunluğu
 "bytes_processed" => 453489,  // Alınan ve işlenen bayt miktarı
 "done" => false,              // POST işleyici sonlanınca başarılı olsun olmasın true
 "files" => array(
  0 => array(
   "field_name" => "file1",       // <input/> alanındaki isim
   // Aşağıdaki 3 eleman $_FILES içindekilerle aynıdır
   "name" => "foo.avi",
   "tmp_name" => "/tmp/phpxxxxxx",
   "error" => 0,
   "done" => true,                // POST işleyici dosyayla işini bitirince true
   "start_time" => 1234567890,    // Dosyanın işleme alındığı zaman
   "bytes_processed" => 57343250, // Dosya işlenirken alınan ve gönderilen bayt miktarı
  ),
  // Aynı istekte, karşıya yüklenmesi tamamlanmamış başka bir dosya
  1 => array(
   "field_name" => "file2",
   "name" => "bar.avi",
   "tmp_name" => NULL,
   "error" => 0,
   "done" => false,
   "start_time" => 1234567899,
   "bytes_processed" => 54554,
  ),
 )
);
]]>
   </programlisting>
  </example>
 </para>
 <warning>
  <para>
   Bunun düzgün çalışması için HTTP sunucusunun isteği tamponlama özelliği
   devre dışı bırakılmalıdır, aksi takdirde PHP dosya yüklemesini yalnızca
   dosya tam olarak yüklendikten sonra görebilir. Nginx gibi sunucuların
   oldukça büyük istekleri tamponladıkları bilinmektedir.
  </para>
 </warning>
 <caution>
  <para>
   Karşıya yükleme süreci bilgisi, herhangi bir betik yürütülmeden önce
   oturuma yazılır. Bu nedenle oturum adını <function>ini_set</function> veya
   <function>session_name</function> yoluyla değiştirmek, içinde karşıya
   yükleme süreci bilgisi bulunmayan bir oturum verecektir.
  </para>
 </caution>

</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
