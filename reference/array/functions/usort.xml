<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: d1df62fe77b6cb0676d064e8e63ee2c3304d4260 Maintainer: nilgun Status: ready -->
<refentry xml:id="function.usort" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>usort</refname>
  <refpurpose>Bir diziyi kullanıcı tanımlı bir işlev kullanarak değerlerine
  göre sıralar</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>usort</methodname>
   <methodparam><type>array</type><parameter role="reference">array</parameter></methodparam>
   <methodparam><type>callable</type><parameter>karş_işlevi</parameter></methodparam>
  </methodsynopsis>
  <para>
   Bu işlev kullanıcı tarafından sağlanmış bir karşılaştırma işlevini
   kullanarak diziyi "değerlerine" göre sıralar.
  </para>
  &note.sort-unstable;
  &note.no-key-association;
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>dizi</parameter></term>
     <listitem>
      <para>
       Sıralanacak dizi.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>karş_işlevi</parameter></term>
     <listitem>
      <para>
       &return.callbacksort;
      </para>
      &callback.cmp;
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.true.always;
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example xml:id="function.usort.examples.basic">
    <title>- <function>usort</function> örneği</title>
    <programlisting role="php">
<![CDATA[
<?php
function cmp($a, $b)
{
    if ($a == $b) {
        return 0;
    }
    return ($a < $b) ? -1 : 1;
}

$a = array(3, 2, 5, 6, 1);

usort($a, "cmp");

foreach ($a as $anahtar => $değer) {
    echo "$anahtar: $değer\n";
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
0: 1
1: 2
2: 3
3: 5
4: 6
]]>
    </screen>
   </example>
  </para>
  <note>
   <para>
    Açıkçası, bu örnek için  <function>sort</function> işlevi daha uygun olurdu.
   </para>
  </note>
  <para>
   <example xml:id="function.usort.examples.multi">
    <title>- <function>usort</function> ve çok boyutlu dizi</title>
    <programlisting role="php">
<![CDATA[
<?php
function karşılaştır($a, $b)
{
    return strcmp($a["meyva"], $b["meyva"]);
}

$meyvalar[0]["meyva"] = "mandalina";
$meyvalar[1]["meyva"] = "limon";
$meyvalar[2]["meyva"] = "portakal";

usort($meyvalar, "karşılaştır");

while (list($anah, $değer) = each($meyvalar)) {
    echo "\$meyvalar[$anah]: " . $değer["meyva"] . "\n";
}
?>
]]>
    </programlisting>
    <para>
     Bir çok boyutlu dizi sıralanırken <varname>$a</varname> ve
    <varname>$b</varname> dizinin ilk indisine gönderimleri içerir.
    </para>
    &example.outputs;
    <screen>
<![CDATA[
$meyvalar[0]: limon
$meyvalar[1]: mandalina
$meyvalar[2]: portakal
]]>
    </screen>
   </example>
  </para>
  <para>
   <example xml:id="function.usort.examples.object">
    <title>- Bir nesnenin üye yöntemini kullanan <function>usort</function>
    örneği</title>
    <programlisting role="php">
<![CDATA[
<?php
class Deneme {
    var $isim;

    function Deneme($isim)
    {
        $this->isim = $isim;
    }

    /* Duruk karşılaştırma işlevi: */
    static function nesne_karşılaştır($a, $b)
    {
        $al = strtolower($a->isim);
        $bl = strtolower($b->isim);
        if ($al == $bl) {
            return 0;
        }
        return ($al > $bl) ? +1 : -1;
    }
}

$a[] = new Deneme("c");
$a[] = new Deneme("b");
$a[] = new Deneme("d");

usort($a, array("Deneme", "nesne_karşılaştır"));

foreach ($a as $öğe) {
    echo $öğe->isim . "\n";
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
b
c
d
]]>
    </screen>
   </example>
   <example xml:id="function.usort.examples.closure">
    <title>- Çok boyutlu bir diziyi sıralamak için
      <link linkend="functions.anonymous">anonim işlevler</link> kullanılan
      <function>usort</function> örneği</title>
    <programlisting role="php">
<![CDATA[
<?php
$array[0] = array('key_a' => 'z', 'key_b' => 'c');
$array[1] = array('key_a' => 'x', 'key_b' => 'b');
$array[2] = array('key_a' => 'y', 'key_b' => 'a');

function build_sorter($key) {
    return function ($a, $b) use ($key) {
        return strnatcmp($a[$key], $b[$key]);
    };
}

usort($array, build_sorter('key_b'));

foreach ($array as $item) {
    echo $item['key_a'] . ', ' . $item['key_b'] . "\n";
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
y, a
x, b
z, c
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>uasort</function></member>
   <member><function>uksort</function></member>
   <member>&seealso.array.sorting;</member>
  </simplelist>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
