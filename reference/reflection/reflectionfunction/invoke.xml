<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: ae9210b4725b38bc869134fe9bd3d6036a2331e2 Maintainer: nilgun Status: ready -->
<refentry xml:id="reflectionfunction.invoke" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>ReflectionFunction::invoke</refname>
  <refpurpose>İşlevi çağırır</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>mixed</type><methodname>ReflectionFunction::invoke</methodname>
   <methodparam rep="repeat"><type>mixed</type><parameter>değiştirgeler</parameter></methodparam>
  </methodsynopsis>
  <para>
   Yansıtılan işlevi çağırır.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>değiştirgeler</parameter></term>
     <listitem>
      <para>
       İşleve aktarılacak değiştirge listesi.
       <function>call_user_func</function> işlevindeki gibi yeteri sayıda
       değiştirge aktarabilirsiniz.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Çağrılan işlevin sonucunu döndürür.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>- <methodname>ReflectionFunction::invoke</methodname> örneği</title>
    <programlisting role="php">
<![CDATA[
<?php
function title($title, $name)
{
    return sprintf("%s. %s\r\n", $title, $name);
}

$function = new ReflectionFunction('title');

echo $function->invoke('Dr', 'Phil');
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Dr. Phil
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    <methodname>ReflectionFunction::invoke</methodname>
    değer döndürülen değiştirgeler varsa kullanılamaz. Yerine
    <methodname>ReflectionFunction::invokeArgs</methodname> kullanılmalıdır
    (değiştirge listesinde gönderimleri aktararak).
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><methodname>ReflectionFunction::export</methodname></member>
   <member><link linkend="object.invoke">__invoke()</link></member>
   <member><function>call_user_func</function></member>
  </simplelist>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
