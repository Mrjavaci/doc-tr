<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 47065812c2450dce5dcc8d62e80f1e75698c6163 Maintainer: nilgun Status: ready -->
<article xml:id="xml.eventhandlers" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Geriçağırım İşlevleri</title>
 <para>
  XML geriçağırım işlevlerinin tanımlayan işlevler:
  <table>
   <title>Desteklenen XML eylemcileri</title>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>Eylemciyi belirleyen PHP işlevi</entry>
      <entry>Olay açıklaması</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry><function>xml_set_element_handler</function></entry>
      <entry>
       XML çözümleyicinin her başlangıç veya bitiş etiketine rastlayışında
       oluşan eleman olayları. Başlangıç ve bitiş etiketlerinin eylemcileri
       ayrı ayrıdır.
      </entry>
     </row>
     <row>
      <entry>
       <function>xml_set_character_data_handler</function>
      </entry>
      <entry>
       Kabaca, etiketler arasındaki boşluklar dahil, XML belgelerin imlenim
       dışında kalan tüm içeriği karakter verisini oluşturur. XML
       çözümleyicinin boşluk eklemeye ve kaldırmaya karar veremeyeceğine
       dikkat ediniz. Boşlukların önem derecelerine karar vermek uygulamaya
       (yani, size) bırakılmıştır.
      </entry>
     </row>
     <row>
      <entry>
       <function>xml_set_processing_instruction_handler</function>
      </entry>
      <entry>
       PHP ile yazılım geliştirenlerin işlem komutları (PI - processing
       instruction) hakkında bilgi sahibi oldukları varsayılır. &lt;?php ?&gt;
       bir işlem komutu olup <replaceable>php</replaceable> dizgesine
       <glossterm>PI hedefi</glossterm> adı verilir. "XML" ile başlayan PI
       hedefleri hariç, tüm PI hedefleri uygulamaya özgü ele alınır.
      </entry>
     </row>
     <row>
      <entry><function>xml_set_default_handler</function></entry>
      <entry>
       Diğer eylemciler tarafından ele alınmayan herşey öntanımlı eylemci
       tarafından ele alınır. XML ve belge türü bildirimleri gibi şeyleri
       öntanımlı eylemcilere bırakabilirsiniz.
      </entry>
     </row>
     <row>
      <entry>
       <function>xml_set_unparsed_entity_decl_handler</function>
      </entry>
      <entry>
       Çözümlenmeyen öğe bildirimleri (NDATA) için bu eylemci çağrılır.
      </entry>
     </row>
     <row>
      <entry>
       <function>xml_set_notation_decl_handler</function>
      </entry>
      <entry>
       Gösterim bildirimleri için bu eylemci çağrılır.
      </entry>
     </row>
     <row>
      <entry>
       <function>xml_set_external_entity_ref_handler</function>
      </entry>
      <entry>
       XML çözümleyici, harici olarak çözümlenecek bir genel öğeye bir
       gönderim bulduğunda bu eylemci çağrılır. Bu örneğin, bir dosyaya veya
       bir URL'ye bir atıf olabilir. Gerçekleme örneği olarak <link
       linkend="example.xml-external-entity">harici öğe örneği</link>ne
       bakınız.
      </entry>
     </row>
     <row>
      <entry>
       <function>xml_set_start_namespace_decl_handler</function>
      </entry>
      <entry>
       Bu işleyici, bir isimalanı bildiriminin başlangıcı için çağrılır.
      </entry>
     </row>
     <row>
      <entry>
       <function>xml_set_end_namespace_decl_handler</function>
      </entry>
      <entry>
       Bu işleyici, bir isimalanı bildiriminin sonu için çağrılır.
       Bu olay libXML tarafından <emphasis>tetiklenmez</emphasis>.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </para>
</article>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

